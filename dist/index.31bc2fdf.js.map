{"mappings":"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","sources":["src/js/controller.js","src/js/model.js","src/js/config.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/js/helper.js","src/js/views/calcTaxView.js","src/js/views/View.js","src/js/views/calcTaxSummaryView.js","src/js/views/federalSummaryView.js","src/js/views/provisionalSummaryView.js"],"sourcesContent":["'use strict';\nimport * as model from './model.js';\n\nimport calcTaxViews from './views/calcTaxView.js';\nimport calcTaxSummaryViews from './views/calcTaxSummaryView.js';\nimport federalSummaryView from './views/federalSummaryView.js';\nimport provisionalSummaryView from './views/provisionalSummaryView.js';\n\nconst controlTax = function () {\n  // 1) Get salary\n  const salary = calcTaxViews.getSalary();\n  // console.log('controller - Salary:', salary);\n\n  if (!salary) {\n    calcTaxViews.renderError('Empty Salary');\n    return console.error('Empty Salary');\n  }\n\n  if (salary < 0) {\n    calcTaxViews.renderError('Enter Positive Salary');\n    return console.error('Enter Positive Salary');\n  }\n\n  // 2) Calculate the Tax in Model\n  // const fedralTax =\n  model.calculateTax(salary);\n\n  calcTaxSummaryViews.render(model.tax);\n\n  federalSummaryView.render(model.tax);\n  provisionalSummaryView.render(model.tax);\n};\n\nconst init = function () {\n  calcTaxViews.addHandlerRender(controlTax);\n};\n\ninit();\n","'use strict';\nimport * as config from './config.js';\nimport { formatNumberInternational } from './helper.js';\n\n// TEST\n// export const printRandom = function () {\n//   console.log('MODEL.JS');\n//   console.log(config.FEDRAL_TAX);\n// };\n\nexport const tax = {\n  fedTaxToPay: [],\n  fedTaxRateUsed: [],\n  fedIncomeTaxable: [],\n  provTaxToPay: [],\n  provTaxRateUsed: [],\n  provIncomeTaxable: [],\n  salary: 0,\n  totalFedTax: 0,\n  totalProvTax: 0,\n  taxToPay: 0,\n  takeHome: 0,\n  avgTaxRate: 0,\n  marginalTax: 0,\n  cppMaxAnnEmpAndEmprContri: 0,\n  eiMaxAnnEmpPrem: 0,\n};\n\nconst _calculateCPP = function (grossSalary) {\n  // console.log(config.CPP.max_annual_pensionable_earning);\n  let baseAmount = grossSalary;\n  if (grossSalary > config.CPP.max_annual_pensionable_earning) {\n    baseAmount = config.CPP.max_annual_pensionable_earning;\n  }\n\n  const maxContributionEarning = baseAmount - config.CPP.basic_exemption;\n  tax.cppMaxAnnEmpAndEmprContri =\n    maxContributionEarning *\n    (config.CPP.employee_employer_contribution_rate / 100);\n  console.log(\n    'Max Annual Emp and Empr Contribution:',\n    formatNumberInternational(tax.cppMaxAnnEmpAndEmprContri)\n  );\n};\n\nconst _calculateEI = function (grossSalary) {\n  let baseAmount = grossSalary;\n  if (grossSalary > config.EI.max_annual_insurable_earnings) {\n    baseAmount = config.EI.max_annual_insurable_earnings;\n  }\n\n  tax.eiMaxAnnEmpPrem = baseAmount * (config.EI.rate / 100);\n  console.log(\n    'Max Annual Emp Premium:',\n    formatNumberInternational(tax.eiMaxAnnEmpPrem)\n  );\n};\n\n/**\n * Calculates the TaxToPay for Fedral and Provincial\n * @param {number} grossSalary\n * @param {Array Object} taxArrayObj\n * @returns {Object Array} taxToPay, taxRateUsed\n */\nconst _calcTaxForFedAndProv = function (grossSalary, taxArrayObj) {\n  let taxableIncome = grossSalary;\n  const taxToPay = [];\n  const taxRateUsed = [];\n  const incomeTaxable = [];\n\n  // TAKES THE ARRAY OBJECT OF THE PASSED OJECT AND FILTERS THEM BASED ON THE CONDITION.\n  const limits = taxArrayObj.filter((limit) => grossSalary > limit.lower);\n  // console.log('Limits:', limits);\n  limits.forEach((arrObj) => {\n    taxableIncome =\n      grossSalary > arrObj.upper\n        ? arrObj.upper - arrObj.lower\n        : grossSalary - arrObj.lower;\n    incomeTaxable.push(taxableIncome);\n    taxToPay.push(taxableIncome * (arrObj.taxRate / 100));\n    taxRateUsed.push(arrObj.taxRate);\n  });\n  // console.log(\n  //   'TaxToPay:',\n  //   taxToPay,\n  //   taxToPay.reduce((acc, tax) => acc + tax)\n  // );\n\n  return { incomeTaxable, taxToPay, taxRateUsed };\n};\n\nconst _fedralTax = function (grossSalary) {\n  //  ======= FEDRAL TAX =======\n  const { incomeTaxable, taxToPay, taxRateUsed } = _calcTaxForFedAndProv(\n    grossSalary,\n    config.FEDRAL_TAX\n  );\n  tax.fedIncomeTaxable = [...incomeTaxable];\n  tax.fedTaxToPay = [...taxToPay];\n  tax.fedTaxRateUsed = [...taxRateUsed];\n\n  // console.log(\n  //   `fedralTaxToPay: ${tax.fedTaxToPay}, fedTaxRateUsed: ${tax.fedTaxRateUsed}`\n  // );\n};\n\nconst _provincialTax = function (grossSalary) {\n  // ======= PROVINCIAL TAX.  =======\n  const { incomeTaxable, taxToPay, taxRateUsed } = _calcTaxForFedAndProv(\n    grossSalary,\n    config.ONTARIO\n  );\n  tax.provIncomeTaxable = [...incomeTaxable];\n  tax.provTaxToPay = [...taxToPay];\n  tax.provTaxRateUsed = [...taxRateUsed];\n  // console.log(\n  //   `provTaxToPay: ${provTaxToPay}, provTaxRateUsed: ${provTaxRateUsed}`\n  // );\n};\n\n/**\n * TAKES IN THE VALUE FROM THE TOP LEVEL SHOWS THE USERS WHAT THEY CAN TAKE HOME.\n */\nexport const calculateTax = function (grossSalary) {\n  console.log(\n    `Annual Gross Salary CAD${formatNumberInternational(grossSalary)}`\n  );\n\n  tax.salary = +grossSalary;\n\n  // const { taxToPay: fedTaxToPay, taxRateUsed: fedTaxRateUsed } =\n  _fedralTax(grossSalary);\n\n  // const { taxToPay: provTaxToPay, taxRateUsed: provTaxRateUsed } =\n  _provincialTax(grossSalary);\n\n  _calculateCPP(grossSalary);\n  _calculateEI(grossSalary);\n\n  tax.totalFedTax = tax.provTaxToPay.reduce((acc, tax) => acc + tax);\n  tax.totalProvTax = tax.fedTaxToPay.reduce((acc, tax) => acc + tax);\n  tax.taxToPay = tax.totalFedTax + tax.totalProvTax;\n  tax.takeHome = grossSalary - tax.taxToPay;\n  tax.avgTaxRate = (tax.taxToPay / grossSalary) * 100;\n  tax.marginalTax =\n    Math.max(...tax.fedTaxRateUsed) + Math.max(...tax.provTaxRateUsed);\n\n  // console.log(\n  //   `Tax to pay: ${formatNumberInternational(\n  //     tax.taxToPay\n  //   )},\\nTake home amount: ${formatNumberInternational(\n  //     tax.takeHome\n  //   )},\\nAverage Tax Rate: ${tax.avgTaxRate.toFixed(2)}%,\\nMarginal Tax Rate: ${\n  //     tax.marginalTax\n  //   }%`\n  // );\n};\n","export const PROV_ONTARIO = 'Ontario';\nexport const PROV_NEWFOUNDLAND_AND_LABRADOR = 'Newfoundland and Labrador';\nexport const PROV_PRINCE_EDDWARD_ISLAND = 'Prince Edward Island';\nexport const PROV_NOVA_SCOTIA = 'Nova Scotia';\nexport const PROV_NEW_BRUNSWICK = 'New Brunswick';\nexport const PROV_QUEBEC = 'Quebec';\nexport const PROV_MAINTOBA = 'Manitoba';\n\nexport const FEDRAL_TAX = [\n  { lower: 0, upper: 50197, taxRate: 15 },\n  { lower: 50197, upper: 100392, taxRate: 20.5 },\n  { lower: 100392, upper: 155625, taxRate: 26 },\n  { lower: 155625, upper: 221708, taxRate: 29 },\n  { lower: 221708, upper: undefined, taxRate: 33 },\n];\n\nexport const ONTARIO = [\n  { lower: 0, upper: 46226, taxRate: 5.05 },\n  { lower: 46226, upper: 92454, taxRate: 9.15 },\n  { lower: 92454, upper: 150000, taxRate: 11.16 },\n  { lower: 150000, upper: 220000, taxRate: 12.16 },\n  { lower: 220000, upper: undefined, taxRate: 13.16 },\n];\n\n// For Year 2022: ONTARIO\nexport const CPP = {\n  max_annual_pensionable_earning: 64900,\n  basic_exemption: 3500,\n  max_contributory_earning: 61400,\n  employee_employer_contribution_rate: 5.7,\n  max_annual_employee_and_employer_contribution: 3499.8,\n  max_annual_self_employed_contribution: 6999.6,\n};\n\n// For Year 2022: ONTARIO\nexport const EI = {\n  max_annual_insurable_earnings: 60300,\n  rate: 1.58,\n  max_annual_employee_premium: 952.74,\n  max_annual_employer_premium: 1333.84,\n};\n\n/* \nProvincial and territorial tax rates (combined chart)\nProvinces and territories \tRates\n\nNewfoundland and Labrador                       \t\n8.7% on the portion of your taxable income that is $39,147 or less, plus\n14.5% on the portion of your taxable income that is more than $39,147 but not more than $78,294, plus\n15.8% on the portion of your taxable income that is more than $78,294 but not more than $139,780, plus\n17.8% on the portion of your taxable income that is more than $139,780 but not more than $195,693, plus\n19.8% on the portion of your taxable income that is more than $195,693 but not more than $250,000, plus\n20.8% on the portion of your taxable income that is more than $250,000 but not more than $500,000, plus\n21.3% on the portion of your taxable income that is more than $500,000 but not more than $1,000,000, plus\n21.8% on the portion of your taxable income that is more than $1,000,000\n\nPrince Edward Island\n9.8% on the portion of your taxable income that is $31,984 or less, plus\n13.8% on the portion of your taxable income that is more than $31,984 but not more than $63,969, plus\n16.7% on the portion of your taxable income that is more than $63,969\n\n\nNova Scotia\t\n8.79% on the portion of your taxable income that is $29,590 or less, plus\n14.95% on the portion of your taxable income that is more than $29,590 but not more than $59,180, plus\n16.67% on the portion of your taxable income that is more than $59,180 but not more than $93,000, plus\n17.5% on the portion of your taxable income that is more than $93,000 but not more than $150,000, plus\n21% on the portion of your taxable income that is more than $150,000\n\nNew Brunswick\t\n9.4% on the portion of your taxable income that is $44,887 or less, plus\n14.82% on the portion of your taxable income that is more than $44,887 but not more than $89,775, plus\n16.52% on the portion of your taxable income that is more than $89,775 but not more than $145,955, plus\n17.84% on the portion of your taxable income that is more than $145,955 but not more than $166,280, plus\n20.3% on the portion of your taxable income that is more than $166,280\n\nQuebec\tGo to Income tax rates (Revenu Québec Web site).\n$46,295 or less\t15%\nMore than $46,295 but not more than $92,580\t20%\nMore than $92,580 but not more than $112,655\t24%\nMore than $112,655\t25.75%\n\nOntario\t\n5.05% on the portion of your taxable income that is $46,226 or less, plus\n9.15% on the portion of your taxable income that is more than $46,226 but not more than $92,454, plus\n11.16% on the portion of your taxable income that is more than $92,454 but not more than $150,000, plus\n12.16% on the portion of your taxable income that is more than $150,000 but not more than $220,000, plus\n13.16% on the portion of your taxable income that is more than $220,000\n\nManitoba\t\n10.8% on the portion of your taxable income that is $34,431 or less, plus\n12.75% on the portion of your taxable income that is more than $34,431 but not more than $74,416, plus\n17.4% on the portion of your taxable income that is more than $74,416\n\nSaskatchewan\t\n10.5% on the portion of your taxable income that is $46,773 or less, plus\n12.5% on the portion of your taxable income that is more than $46,773 but not more than $133,638, plus\n14.5% on the portion of your taxable income that is more than $133,638\n\nAlberta\t\n10% on the portion of your taxable income that is $131,220 or less, plus\n12% on the portion of your taxable income that is more than $131,220 but not more than $157,464, plus\n13% on the portion of your taxable income that is more than $157,464 but not more than $209,952, plus\n14% on the portion of your taxable income that is more than $209,952 but not more than $314,928, plus\n15% on the portion of your taxable income that is more than $314,928\n\nBritish Columbia\t\n5.06% on the portion of your taxable income that is $43,070 or less, plus\n7.7% on the portion of your taxable income that is more than $43,070 but not more than $86,141, plus\n10.5% on the portion of your taxable income that is more than $86,141 but not more than $98,901, plus\n12.29% on the portion of your taxable income that is more than $98,901 but not more than $120,094, plus\n14.7% on the portion of your taxable income that is more than $120,094 but not more than $162,832, plus\n16.8% on the portion of your taxable income that is more than $162,832 but not more than $227,091, plus\n20.5% on the portion of your taxable income that is more than $227,091\n\nYukon\t\n6.4% on the portion of your taxable income that is $50,197 or less, plus\n9% on the portion of your taxable income that is more than $50,197 but not more than $100,392, plus\n10.9% on the portion of your taxable income that is more than $100,392 but not more than $155,625, plus\n12.8% on the portion of your taxable income that is more than $155,625 but not more than $500,000, plus\n15% on the portion of your taxable income that is more than $500,000\n\nNorthwest Territories\t\n5.9% on the portion of your taxable income that is $45,462 or less, plus\n8.6% on the portion of your taxable income that is more than $45,462 but not more than $90,927, plus\n12.2% on the portion of your taxable income that is more than $90,927 but not more than $147,826, plus\n14.05% on the portion of your taxable income that is more than $147,826\n\nNunavut\t\n4% on the portion of your taxable income that is $47,862 or less, plus\n7% on the portion of your taxable income that is more than $47,862 but not more than $95,724, plus\n9% on the portion of your taxable income that is more than $95,724 but not more than $155,625, plus\n11.5% on the portion of your taxable income that is more than $155,625\n*/\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\n * Takes a Number and converts it into a String in International format\n * @param {number} num\n * @returns String in the INternation format of the country\n */\nexport const formatNumberInternational = function (num) {\n  const options = {\n    style: 'currency',\n    unit: 'celsius',\n    currency: 'CAD',\n  };\n  return new Intl.NumberFormat('en-CA', options).format(num);\n};\n","import View from './View.js';\n\nclass CalcTaxView extends View {\n  _parentElement = document.querySelector('.salary-form');\n  _errorMessage = 'Incorrect Input';\n\n  getSalary() {\n    const salary = this._parentElement.querySelector('.salary__field').value;\n    this._clearInput();\n    return salary;\n  }\n\n  _clearInput() {\n    this._parentElement.querySelector('.salary__field').value = '';\n  }\n\n  addHandlerRender(handler) {\n    this._parentElement.addEventListener('submit', function (e) {\n      e.preventDefault();\n      handler();\n    });\n  }\n}\n\nexport default new CalcTaxView();\n","export default class View {\n  _data;\n\n  render(data, salary) {\n    // console.log(data);\n\n    this._data = data;\n\n    const markup = this._generateMarkup();\n\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  /**\n   * renderError: Rendering error on the UI\n   * @param {String} message if the message is undefined then Static message will take over.\n   */\n  renderError(message = this._errorMessage) {\n    const markup = `\n          <div class=\"error\">\n            <p>${message}</p>\n          </div>\n    `;\n\n    // this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', markup);\n  }\n\n  /**\n   * Documentation protected method _clear()\n   * This clears the HTML elements in the sections.\n   */\n  _clear() {\n    this._parentElement.innerHTML = '';\n  }\n}\n","import View from './View.js';\nimport { formatNumberInternational } from '../helper.js';\n\nclass CalcTaxSummaryView extends View {\n  _parentElement = document.querySelector('.tax-takehome-results');\n\n  _generateMarkup() {\n    document.querySelector('.gross-salary').textContent =\n      formatNumberInternational(this._data.salary);\n\n    // console.log(`\n    // <th>Fedral Tax: ${formatNumberInternational(this._data.totalFedTax)}</th>\n    // <th>Provincial Tax: ${formatNumberInternational(\n    //   this._data.totalProvTax\n    // )}</th>\n    // <th>Tax to Pay: ${formatNumberInternational(this._data.taxToPay)}</th>\n    // <th>Take Home Amount: ${formatNumberInternational(this._data.takeHome)}</th>\n    // <th>Average Tax Rate: ${this._data.avgTaxRate.toFixed(2)}%</th>\n    // <th>Marginal Tax Rate: ${this._data.marginalTax.toFixed(2)}%</th>\n    // `);\n\n    return `\n          <tr>\n            <td>${formatNumberInternational(this._data.totalFedTax)}</td>\n            <td>${formatNumberInternational(this._data.totalProvTax)}</td>\n            <td>${formatNumberInternational(this._data.taxToPay)}</td>\n            <td>${formatNumberInternational(this._data.takeHome)}</td>\n            <td>${this._data.avgTaxRate.toFixed(2)}%</td>\n            <td>${this._data.marginalTax.toFixed(2)}%</td>\n            <td>${formatNumberInternational(\n              this._data.cppMaxAnnEmpAndEmprContri\n            )}</td>\n            <td>${formatNumberInternational(this._data.eiMaxAnnEmpPrem)}</td>\n          </tr>\n    `;\n  }\n}\n\nexport default new CalcTaxSummaryView();\n","import View from './View.js';\nimport { formatNumberInternational } from '../helper.js';\nimport * as config from '../config.js';\n\nclass FederalSummaryView extends View {\n  _parentElement = document.querySelector('.federal-breakdown');\n\n  _generateMarkup() {\n    let markup = '';\n\n    for (let i = 0; i < config.FEDRAL_TAX.length; i++) {\n      const ZERO = formatNumberInternational(0);\n      markup += `\n          <tr>\n            <td>${config.FEDRAL_TAX[i].taxRate}%</td>       <!-- Tax Rate -->\n            <td>${\n              config.FEDRAL_TAX[i].lower\n                ? formatNumberInternational(config.FEDRAL_TAX[i].lower)\n                : ZERO\n            }</td> <!-- Bracket Lower Limit -->\n            <td>${\n              config.FEDRAL_TAX[i].upper\n                ? formatNumberInternational(config.FEDRAL_TAX[i].upper)\n                : ZERO\n            }</td>    <!-- Bracket Upper Limit -->\n            <td>${\n              this._data.fedIncomeTaxable[i]\n                ? formatNumberInternational(this._data.fedIncomeTaxable[i])\n                : ZERO\n            }</td>  <!-- Taxable Income -->\n            <td>${\n              this._data.fedTaxToPay[i]\n                ? formatNumberInternational(this._data.fedTaxToPay[i])\n                : ZERO\n            }</td>      <!-- Tax to Pay -->\n          </tr>\n          `;\n    }\n    return markup;\n  }\n}\n\nexport default new FederalSummaryView();\n","import View from './View.js';\nimport { formatNumberInternational } from '../helper.js';\nimport * as config from '../config.js';\n\nclass FederalSummaryView extends View {\n  _parentElement = document.querySelector('.provisional-breakdown');\n\n  _generateMarkup() {\n    let markup = '';\n\n    for (let i = 0; i < config.ONTARIO.length; i++) {\n      const ZERO = formatNumberInternational(0);\n      markup += `\n          <tr>\n            <td>${config.ONTARIO[i].taxRate}%</td>       <!-- Tax Rate -->\n            <td>${\n              config.ONTARIO[i].lower\n                ? formatNumberInternational(config.ONTARIO[i].lower)\n                : ZERO\n            }</td> <!-- Bracket Lower Limit -->\n            <td>${\n              config.ONTARIO[i].upper\n                ? formatNumberInternational(config.ONTARIO[i].upper)\n                : ZERO\n            }</td>    <!-- Bracket Upper Limit -->\n            <td>${\n              this._data.provIncomeTaxable[i]\n                ? formatNumberInternational(this._data.provIncomeTaxable[i])\n                : ZERO\n            }</td>  <!-- Taxable Income -->\n            <td>${\n              this._data.provTaxToPay[i]\n                ? formatNumberInternational(this._data.provTaxToPay[i])\n                : ZERO\n            }</td>      <!-- Tax to Pay -->\n          </tr>\n          `;\n    }\n    return markup;\n  }\n}\n\nexport default new FederalSummaryView();\n"],"names":["parcelHelpers","require","_modelJs","_calcTaxViewJs","_calcTaxSummaryViewJs","_federalSummaryViewJs","_provisionalSummaryViewJs","controlTax","salary","_calcTaxViewJsDefault","default","getSalary","renderError","console","error","calculateTax","_calcTaxSummaryViewJsDefault","render","tax","_federalSummaryViewJsDefault","_provisionalSummaryViewJsDefault","addHandlerRender","_configJs","_helperJs","fedTaxToPay","fedTaxRateUsed","fedIncomeTaxable","provTaxToPay","provTaxRateUsed","provIncomeTaxable","totalFedTax","totalProvTax","taxToPay","takeHome","avgTaxRate","marginalTax","cppMaxAnnEmpAndEmprContri","eiMaxAnnEmpPrem","_calcTaxForFedAndProv","grossSalary","taxArrayObj","taxableIncome","taxRateUsed","incomeTaxable","filter","limit","lower","forEach","arrObj","upper","push","taxRate","log","formatNumberInternational","FEDRAL_TAX","_fedralTax","ONTARIO","_provincialTax","baseAmount","CPP","max_annual_pensionable_earning","maxContributionEarning","basic_exemption","employee_employer_contribution_rate","_calculateCPP","EI","max_annual_insurable_earnings","rate","_calculateEI","reduce","acc","Math","max","PROV_ONTARIO","PROV_NEWFOUNDLAND_AND_LABRADOR","PROV_PRINCE_EDDWARD_ISLAND","PROV_NOVA_SCOTIA","PROV_NEW_BRUNSWICK","PROV_QUEBEC","PROV_MAINTOBA","undefined","max_contributory_earning","max_annual_employee_and_employer_contribution","max_annual_self_employed_contribution","max_annual_employee_premium","max_annual_employer_premium","exports","interopDefault","a","__esModule","defineInteropFlag","Object","defineProperty","value","exportAll","source","dest","keys","key","hasOwnProperty","enumerable","get","export","destName","num","Intl","NumberFormat","style","unit","currency","format","_viewJs","CalcTaxView","_viewJsDefault","_parentElement","document","querySelector","_errorMessage","this","_clearInput","handler","addEventListener","e","preventDefault","_data","data","markup","_generateMarkup","_clear","insertAdjacentHTML","message","innerHTML","CalcTaxSummaryView","textContent","toFixed","FederalSummaryView","i","length","ZERO"],"version":3,"file":"index.31bc2fdf.js.map"}